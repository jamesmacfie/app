'use strict';Router.route('rooms', {		name: 'roomList',		data: function() {				return {						rooms: Rooms.find(),						title: 'Your rooms'				};		},		waitOn: function() {				return [					Meteor.subscribe('userRooms'),					Meteor.subscribe('userHubSensors'),					Meteor.subscribe('sensorTypes')				];		}});Router.route('rooms/insert', {	name: 'roomInsert'});Router.route('rooms/:_id', {	name: 'roomItem',	data: function() {		var room = Rooms.findOne();		return {			room: room,			sensors: Sensors.find(),			title: room ? room.name : '',			prev: true		}	},	fastRender: true,	waitOn: function() {		return [			Meteor.subscribe('room', this.params._id),			Meteor.subscribe('roomSensors', this.params._id),			Meteor.subscribe('userRoomDataPoints', this.params._id)		];	}});Router.route('room/:_id/edit', {	name: 'roomItemEdit',	data: function() {		return {			room: Rooms.findOne()		};	},	waitOn: function() {		return [			Meteor.subscribe('room', this.params._id)		];	}});Router.route('rooms/:_id/addSensor', {	name: 'roomAddSensor',	data: function() {		return {			room: Rooms.findOne(this.params._id),			sensors: Sensors.find(),			title: 'Add a new sensor'		};	},	waitOn: function() {		return [			Meteor.subscribe('room', this.params._id),			Meteor.subscribe('exclRoomSensors', this.params._id)		];	}});