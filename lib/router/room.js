'use strict';Router.route('rooms', {		name: 'roomList',		data: function() {			return Rooms.find();		},		waitOn: function() {				return [					Router.globalSubscription.subscribe('userRooms'),					Router.globalSubscription.subscribe('userHubSensors'),					Router.globalSubscription.subscribe('sensorTypes')				];		}});Router.route('rooms/insert', {	name: 'roomInsert',	onBeforeAction: function() {		var prev = Session.get('prev');		if (!prev) {			Router.go('home');		} else {			this.next();		}	}});Router.route('rooms/:_id', {	name: 'room',	data: function() {		var room = Rooms.findOne(this.params._id),			image,			roomImageStyle ='background-image: ',			sensors = [];		if (room) {			sensors = Sensors.find({				_id: {					$in: room.sensors				}			});			image = Images.findOne(room.image);			roomImageStyle += image ?				'url(\'/images/roomBackgrounds/' + image.url + '\');' :				'url(\'/images/roomBackgrounds/default.jpg\')';		}		return {			room: room,			sensors: sensors,			navbarCls: 'navbar--transparent navbar--largeBackground',			pageCls: 'page--navLargeBackground',			navbarStyles: roomImageStyle		};	},	fastRender: true,	waitOn: function() {		return [			Router.globalSubscription.subscribe('userRooms'),			Router.globalSubscription.subscribe('userHubSensors'),			Router.globalSubscription.subscribe('userDataPoints')		];	}});Router.route('rooms/:_id/edit', {	name: 'roomEdit',	data: function() {		var room = Rooms.findOne(this.params._id);		//Should check permissions here.		return room;	},	waitOn: function() {		return [			Router.globalSubscription.subscribe('userRooms')		];	}});